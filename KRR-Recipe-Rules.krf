(in-microtheory KRR-Recipe-RulesMt)
(genlMt KRR-Recipe-RulesMt KRR-Recipe-FactsMt)

;; (ingredientsPresent ?virtualFridge ?recipe)
(<== (ingredientsPresent ?virtualFridge ?recipe)
         (requiresIngredients ?recipe ?recipeIngredient)
         (isa ?ingredient1 ?recipeIngredient)
         (or (isa ?ingredient1 ?virtualFridge)
               (and (subsituteIngredients ?ingredient1 ?ingredient2)
                        (isa ?ingredient2 ?virtualFridge))))


;; get list of ingredients and quantity
(<== (getIngredients ?recipe ?ingredient ?quantity ?UnitOfMeasure)
      (requiresIngredients ?recipe ?collection)
      (optionalIngredient ?recipie ?collection2)
      (or (isa ?ingredient ?collection)
          (isa ?ingredient ?collection2))
      (quantityRequired ?recipe ?ingredient ?quantity ?UnitOfMeasure))

;; get recipes that are able to be cooked based on quantities and serving size
(<== (canCook ?virtualFridge ?recipe ?serving)
    (ingredientsPresent ?virtualFridge ?recipe)
    (requiresIngredients ?recipe ?recipeingredient)
    (isa ?ingredient ?recipeIngredient)
    (quantityRequired ?recipe ?recipeIngredient ?quantity ?unit)
    (quantityFridge ?virtualFridge ?ingredient ?quantity2 ?unit)
    (greaterThanOrEqualTo ?quantity2 (TimesFn ?quantity ?serving))

;; get recipes that are able to be cooked and should be cooked based on user preferences
(<== (shouldCook ?recipe ?preference ?virtualFridge ?serving) 
        (IngredientsPresent ?virtualFridge ?recipe)
        (canCook ?virtualFridge ?recipe ?serving)
        (isa ?recipe ?recipetype)
        (isa ?recipetype ?preference)

(<== (shouldCooksubstitute ?recipe ?preference ?virtualFridge ?serving ?substitute) 
    (isa RecipeVegetarian ?preference)
    (vegVersion ?recipe ?virtualFridge ?serving ?substitute))

(<== (shouldCooksubstitute ?recipe ?preference ?virtualFridge ?serving ?substitute) 
    (isa RecipeVegan ?preference)
    (veganVersion ?recipe ?virtualFridge ?serving ?substitute))

;; vegetarian version
(<== (vegVersion ?recipe ?virtualFridge ?serving ?substitute)
    (requiresIngredients ?recipe ?recipeIngredient)
    (isa ?ingredient ?recipeIngredient)
    (or (and (not(meatIngredient ?ingredient))
            (quantityRequired ?recipe ?ingredient ?quantity ?unit)
            (quantityFridge ?ingredient ?quantity2 ?unit))
            (greaterThanOrEqualTo ?quantity2 (TimesFn ?quantity ?serving))
        (and (meatIngredient ?ingredient)
            (substituteIngredients ?ingredient ?substitutedingredient)
            (not(meatIngredient ?ingredientwhichsubstitutes))
            (quantityRequired ?recipe ?ingredient ?quantity ?unit)
            (quantityFridge ?virtualFridge ?ingredientwhichsubstitutes ?quantity2 ?unit)
            (greaterThanOrEqualTo ?quantity2 (TimesFn ?quantity ?serving)))))
    

;; Vegan version
(<== (veganVersion ?recipe ?virtualFridge ?serving ?ingredientwhichsubstitutes)
    (requiresIngredients ?recipe ?recipeIngredient)
    (isa ?ingredient ?recipeIngredient)
    (or (and (not(meatIngredient ?ingredient))
            (not(dairyIngredient ?ingredient))
            (quantityRequired ?recipe ?ingredient ?quantity ?unit)
            (quantityFridge ?ingredient ?quantity2 ?unit))
            (greaterThanOrEqualTo ?quantity2 (TimesFn ?quantity ?serving))
        (and (or (meatIngredient ?ingredient) (dairyIngredient ?ingredient))
            (substituteIngredients ?ingredient ?substitutedingredient)
            (and(not(meatIngredient ?ingredientwhichsubstitutes)) (not(dairyIngredient ?ingredientwhichsubstitutes)))
            (quantityRequired ?recipe ?ingredient ?quantity ?unit)
            (quantityFridge ?virtualFridge ?ingredientwhichsubstitutes ?quantity2 ?unit)
            (greaterThanOrEqualTo ?quantity2 (TimesFn ?quantity ?serving)))))

;; 
    

;; if a vegetarian version exists, then the recipe is an instance of vegrecipe


